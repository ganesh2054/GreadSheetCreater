<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAASZSURBVEhLvZf7T5tlFMf7D+lvJhp/cFfQbTpuDujGZUBb
        yjVyywoMO7oCLYmZkxFvYIJmIzOYJgNWkHKJcRdlSGMczkEmGDct7UtvXBzC13Oe3mh5KS0xO8lJ3rzv
        e76f9znPOc/zvAokYB7fFuaXNjE4tYb2zzyoMa1Ac0kSztd8j5/xO/xuIhYX7PVvwWJbRYVRQnqVE7n1
        LhQ1S1C/L0HbuiKcr/keP+N3+F2O4dh4tif4rn0DGhLNbXCipCUC2s/5XY7hWNbYy2TB1657kapyiFTK
        iSfiHJtCGt39/qBqtO0Cd37hQ06dC1qDvGAyXkYaOXVOoRlrUeDuGwStdUJ7SV4o1jV6zsg+WSEt1mTt
        nRYG35v9h9K7LL5SVmCHa/QryNe5UNkmQdXC9+LDWZO1mREyAfb6t6k6QyOQDw65iopHSVNxfWgVfy0/
        R515GWq9h0YWP5a1mcGsMNhiW4OS2kEuYKerWgIt8/1M4Mu3/t2EruM+lLW/o6J9nd6Rg0fuMcNiWxex
        Co9vm3ov0AbRAREvpXnKu8D96hJBbH88W8Xm5haq9ffx+umbyK76FeebPShsklDY6Aq7ttVNHtBmRjmx
        3MRUzC9uIr2S5jYGFvIyCsquccLUEymOJvMMDFdnxXV33xxqDD+goe0ODF1LMPf6YPrcA3OPB1f6/Dhb
        76A59tDHS4LBrAViKgYn15DL7RMDZOeRHi1yYGBkVUDYlJVTeOXULfR+/Th4J741d9pRoHOi/LKPNGlx
        IRYzFe2felF0cXeaOWUFjRLmFp4LgYe/SXjjzDBOFo4hUzOB1HMj6Ol/hA97f8HVGDd/bIfFuijijF0z
        OK60UnE5BJxZzFS817G7mvMuuFBrXsFTR2C97RuYx5v5ozh1fgxZpRPCM9TjOJZrxTESjfKzI3gtbYhS
        Py1ijV12Ag8jQzNGVb1M+j4wUxELLaYCqDG7RRCb8aNZHKKRppXYwtB4/q52AicKvkXrlZ8C8V2zSM0b
        pSxRptQ2gv9Nc+57MeCUc6PiWabGhvQSK4qb/nwRqY6A2dNVY8ivntqnuHQSHs5HiotHnkhxdX7yc7i4
        2rrtBB4Jg9+mj28w/phAOxU7cNMaaafcismk2qnRNI23KPUh8JEcK/pvPUlwAaHdZb8FRNcxHeUM1H8w
        IzLDGWIoz/+raYOYe0xV/X8smYfOWEVByXlW6Xh4tKeLbcgum4Tk3ghtEusH2iS2t7fRZHqAkwIQEI/n
        R3Nu46tvFkTsgbZFrokbwxtYXKLzWP13eKdo/1bjLkhT2eDxBj76gAcB3oHcUDc/wYn8QdGfcrCQ89y+
        lGLB5N1nQdoOMFsyR59SKroygx+qi09pNLQwqOTTnUlzfJhqoI36eadFgdkChz1nQiPnra78sh/qFodY
        DmPhPNLD2bepwh8E1SO2C8zGR1I+miZyvBX7LO06av0ywcZpSQysUjynLx+3oP2aPagabbJgtuQO9Dxy
        D50u/MjS3sOR7CEa/Tgm7kTmNNb2BLPt/oVxxvmFcSKjWkJVhw9fDjyCO1i9e1lccMiif9q8Mj9t3iR/
        2oD/AKgz2LQCoMHxAAAAAElFTkSuQmCC
</value>
  </data>
</root>